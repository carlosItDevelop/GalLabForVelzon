@page "/apex-funnel-charts"
@using ApexCharts
@using System.Collections.Generic
@using System.Threading.Tasks
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager // This line is used to generate URLs dynamically //



                <!-- Page Header -->
                <div class="my-4 page-header-breadcrumb d-flex align-items-center justify-content-between flex-wrap gap-2">
                    <div>
                        <h1 class="page-title fw-medium fs-18 mb-2">Apex Funnel Charts</h1>
                        <div class="">
                            <nav>
                                <ol class="breadcrumb mb-0">
                                    <li class="breadcrumb-item"><a href="javascript:void(0);">Charts</a></li>
                                    <li class="breadcrumb-item"><a href="javascript:void(0);">Apex Charts</a></li>
                                    <li class="breadcrumb-item active" aria-current="page">Apex Funnel Charts</li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                    <div class="btn-list">
                        <button class="btn btn-primary-light btn-wave me-2">
                            <i class="bx bx-crown align-middle"></i> Plan Upgrade
                        </button>
                        <button class="btn btn-secondary-light btn-wave me-0">
                            <i class="ri-upload-cloud-line align-middle"></i> Export Report
                        </button>
                    </div>
                </div>
                <!-- Page Header Close -->

                <!-- Start::row-1 -->
                <div class="row">
                    <div class="col-xl-6">
                        <div class="card custom-card">
                            <div class="card-header">
                                <div class="card-title">Basic Funnel Chart</div>
                            </div>
                            <div class="card-body">
                                <ApexChart TItem="Funnelbasic" Height="350"
                                            Title="Recruitment Funnel"
                                            Options=options1>

                                        <ApexPointSeries TItem="Funnelbasic"
                                            Items="Funnelbasics"
                                            Name="Funnel Series"
                                            Color="#546dfe"
                                            XValue="@(e => e.Country)"
                                            SeriesType="SeriesType.Bar"
                                            YAggregate="@(e => e.Sum(e => e.GrossValue))"
                                            OrderByDescending="e=>e.Y"
                                            ShowDataLabels />
                                    </ApexChart>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="card custom-card">
                            <div class="card-header">
                                <div class="card-title">Gradient Funnel Chart</div>
                            </div>
                            <div class="card-body">
                                <ApexChart TItem="FunnelGradient" Height="350"
                                    Title="Pyramid Chart"
                                    Options=options2>

                                    <ApexPointSeries TItem="FunnelGradient"
                                        Items="FunnelGradients"
                                        Name="Gross Value"
                                        XValue="@(e => e.Country)"
                                        SeriesType="SeriesType.Bar"
                                        YAggregate="@(e => e.Sum(e => e.GrossValue))"
                                        OrderByDescending="e=>e.Y"
                                        ShowDataLabels />
                                </ApexChart>
                            </div>
                        </div>
                    </div>
                </div>
                <!--End::row-1 -->


@code {
    private List<Funnelbasic> Funnelbasics { get; set; } = SampleDataFunnelbasic.GetFunnelbasics();
    private ApexChartOptions<Funnelbasic>? options1;

    public static class SampleDataFunnelbasic
    {
        public static List<Funnelbasic> GetFunnelbasics()
        {
            return new List<Funnelbasic>
            {
                new Funnelbasic { Country = "Hired", GrossValue = 200 },
                new Funnelbasic { Country = "Offered", GrossValue = 330 },
                new Funnelbasic { Country = "Verify", GrossValue = 548 },
                new Funnelbasic { Country = "Technical", GrossValue = 740 },
                new Funnelbasic { Country = "HR Interview", GrossValue = 880 },
                new Funnelbasic { Country = "Assessed", GrossValue = 990 },
                new Funnelbasic { Country = "Screened", GrossValue = 1100 },
                new Funnelbasic { Country = "Sourced", GrossValue = 1380 },
            };
        }
    }

    public class Funnelbasic
    {
        public string? Country { get; set; }
        public int GrossValue { get; set; }
    }

    
    private List<FunnelGradient> FunnelGradients { get; set; } = SampleDataFunnelGradient.GetFunnelGradients();
    private ApexChartOptions<FunnelGradient>? options2;

    public static class SampleDataFunnelGradient
    {
        public static List<FunnelGradient> GetFunnelGradients()
        {
            // Sample data for FunnelGradients
            return new List<FunnelGradient>
            {
                new FunnelGradient { Country = "Sweets", GrossValue = 200 },
                new FunnelGradient { Country = "Processed Foods", GrossValue = 330 },
                new FunnelGradient { Country = "Healthy Fats", GrossValue = 548 },
                new FunnelGradient { Country = "Meat", GrossValue = 740 },
                new FunnelGradient { Country = "Beans & Legumes", GrossValue = 880 },
                new FunnelGradient { Country = "Dairy", GrossValue = 990 },
                new FunnelGradient { Country = "Fruits & Vegetables", GrossValue = 1100 },
                new FunnelGradient { Country = "Grains", GrossValue = 1380 },
            };
        }
    }

    public class FunnelGradient
    {
        public string? Country { get; set; }
        public int GrossValue { get; set; }
    }
    protected override void OnInitialized()
    {
        options1 = new ApexChartOptions<Funnelbasic>
        {
            DataLabels = new ApexCharts.DataLabels {
                Enabled = true,
                Formatter= @"function (val, opt) {
                return opt.w.globals.labels[opt.dataPointIndex] + ':  ' + val;
                }",
            }, 
            PlotOptions = new PlotOptions
            {
                Bar = new PlotOptionsBar
                {
                    Horizontal = true,
                    IsFunnel = true, 
                }
            },
            Title = new Title{
                Align = ApexCharts.Align.Center,
            },
        };

        options2 = new ApexChartOptions<FunnelGradient>
        {
            DataLabels = new ApexCharts.DataLabels {
                Enabled = true,
                Formatter= @"function (val, opt) {
                return opt.w.globals.labels[opt.dataPointIndex] 
                }",
            }, 
            Colors = new Color(new List<string> { "#7b76fe", "#0cd7b1", "#fe5454", "#0ca3e7", "#f4a742", "#d77cf7", "#546dfe"}),
            PlotOptions = new PlotOptions
            {
                Bar = new PlotOptionsBar
                {
                    Horizontal = true,
                    IsFunnel = true,
                    Distributed= true,
                    BarHeight= "80%",
                }
            },
            Title = new Title{
                Align = ApexCharts.Align.Center,
            },
            Legend = new Legend {
                Show = false,
            },
        };
    }

}