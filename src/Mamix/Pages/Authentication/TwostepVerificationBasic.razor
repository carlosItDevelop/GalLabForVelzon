@page "/twostep-verification-basic"
@layout CustomLayout
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager // This line is used to generate URLs dynamically //


            <div class="authentication-background">

                <div class="container-lg">
                    <div class="row justify-content-center align-items-center authentication two-step-verification authentication-basic h-100">
                        <div class="col-xxl-4 col-xl-5 col-lg-5 col-md-6 col-sm-8 col-12">
                            <div class="my-5 d-flex justify-content-center"> 
                                <a href="/index"> 
                                    <img src="@($"{NavigationManager.BaseUri}assets/images/brand-logos/desktop-dark.png")" alt="logo" class="desktop-dark"> 
                                </a> 
                            </div>
                            <div class="card custom-card my-4">
                                <div class="card-body p-5">
                                    <p class="h4 mb-2 fw-semibold">Verify Your Account</p>
                                    <p class="mb-4 text-muted fw-normal">Enter the 4 digit code sent to the registered email Id.</p>
                                    <div class="row gy-3">
                                        <div class="col-xl-12 mb-2">
                                            <div class="row">
                                                <div class="col-3">
                                                    <input type="text" class="form-control form-control-lg text-center" id="one" maxlength="1" @ref="nextInputRef" @oninput='() => ValueChange("nextInput2")'>
                                                </div>
                                                <div class="col-3">
                                                    <input type="text" class="form-control form-control-lg text-center" id="two" maxlength="1" @ref="nextInput2Ref" @oninput='() => ValueChange("nextInput3")'>
                                                </div>
                                                <div class="col-3">
                                                    <input type="text" class="form-control form-control-lg text-center" id="three" maxlength="1" @ref="nextInput3Ref" @oninput='() => ValueChange("nextInput4")'>
                                                </div>
                                                <div class="col-3">
                                                    <input type="text" class="form-control form-control-lg text-center" id="four" maxlength="1" @ref="nextInput4Ref">
                                                </div>
                                            </div>
                                            <div class="form-check mt-2">
                                                <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
                                                <label class="form-check-label text-muted fw-normal fs-12" for="defaultCheck1">
                                                    Did not recieve a code ?<a href="/mail" class="text-primary ms-2 d-inline-block fw-medium">Resend</a>
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-xl-12 d-grid mt-3">
                                            <a href="/index" class="btn btn-primary">Verify</a>
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <p class="fs-12 text-danger mt-3 mb-0"><sup><i class="ri-asterisk"></i></sup>Don't share the verification code with anyone !</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

@code {

    private ElementReference nextInputRef;
    private ElementReference nextInput2Ref;
    private ElementReference nextInput3Ref;
    private ElementReference nextInput4Ref;

    private void ValueChange(string nextInputId)
    {
        // Set focus on the next input
        if (nextInputId == "nextInput2")
        {
            nextInput2Ref.FocusAsync();
        }
        if (nextInputId == "nextInput3")
        {
            nextInput3Ref.FocusAsync();
        }
        if (nextInputId == "nextInput4")
        {
            nextInput4Ref.FocusAsync();
        }
    }

}