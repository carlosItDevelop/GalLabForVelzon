@using Microsoft.AspNetCore.Components.Web
@namespace mamix.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager // This line is used to generate URLs dynamically //
@inject StateService stateService
@using System.Text.Json;
@inject IHttpContextAccessor HttpContextAccessor
@{ 
    var appState = stateService.GetAppState();

}

<!DOCTYPE html>
<html lang="en"  data-toggled="close"
    @if (!string.IsNullOrEmpty(appState?.Direction))
    {
        <text>dir="@appState.Direction"</text>
    }
    @if (!string.IsNullOrEmpty(appState?.NavigationStyles))
    {
        <text>data-nav-layout="@appState.NavigationStyles"</text>
    }
    @if (!string.IsNullOrEmpty(appState?.ColorTheme))
    {
        <text>data-theme-mode="@appState.ColorTheme"</text>
    }
    @if (!string.IsNullOrEmpty(appState?.HeaderColor))
    {
        <text>data-header-styles="@appState.HeaderColor"</text>
    }
    @if (!string.IsNullOrEmpty(appState?.MenuColor))
    {
        <text>data-menu-styles="@appState.MenuColor"</text>
    }
    @if (!string.IsNullOrEmpty(appState?.MenuStyles))
    {
        <text>data-nav-style="@appState.MenuStyles"</text>
    }
    @if (!string.IsNullOrEmpty(appState?.PageStyles))
    {
        <text>data-page-style="@appState.PageStyles"</text>
    }
    @if (!string.IsNullOrEmpty(appState?.WidthStyles))
    {
        <text>data-width="@appState.WidthStyles"</text>
    }
    @if (!string.IsNullOrEmpty(appState?.MenuPosition))
    {
        <text>data-menu-position="@appState.MenuPosition"</text>
    }
    @if (!string.IsNullOrEmpty(appState?.HeaderPosition))
    {
        <text>data-header-position="@appState.HeaderPosition"</text>
    }
    @{
        string style = "";

        if (!string.IsNullOrEmpty(appState?.ThemePrimary))
        {
            style += $"--primary-rgb: {appState.ThemePrimary}; ";
        }
        if (!string.IsNullOrEmpty(appState?.ThemeBackground))
        {
            style += $"--body-bg-rgb: {appState.ThemeBackground}; ";
            style += $"--body-bg-rgb2: {appState.ThemeBackground1}; ";
            style += $"--light-rgb: {appState.ThemeBackground1}; ";
            style += $"--form-control-bg: rgb({appState.ThemeBackground1}); ";
            style += $"--gray-3: rgb({appState.ThemeBackground1}); ";
            style += $"--light-rgb: rgba(255,255,255,0.1); ";
        }
    }
    style="@style">
    
    <head>
        
        <!-- Meta Data -->
		<meta charset="UTF-8">
        <meta name='viewport' content='width=device-width, initial-scale=1.0'>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="Description" content="Mamix - Blazor Server App Bootstrap5 Premium Admin & Dashboard Template">
        <meta name="Author" content="Spruko Technologies Private Limited">
        <meta name="keywords" content="blazor c#, admin dashboard template, admin theme, template dashboard, admin, dashboard template bootstrap, admin dashboard, dashboard, blazor server, bootstrap dashboard, bootstrap admin, dashboard, bootstrap admin themes, c# blazor, bootstrap blazor">
        
        <!-- TITLE -->
		<title>Mamix - Blazor Server App Bootstrap5 Premium Admin & Dashboard Template </title>

        <!-- FAVICON -->
        <link rel="icon" href="@($"{NavigationManager.BaseUri}assets/images/brand-logos/favicon.ico")" type="image/x-icon">

        <!-- Style Css -->
        <link href="@($"{NavigationManager.BaseUri}assets/css/styles.css")" rel="stylesheet" >
        
        <!-- ICONS CSS -->
        <link href="@($"{NavigationManager.BaseUri}assets/css/icons.css")" rel="stylesheet">

        <!-- node waves CSS -->
        <link rel="stylesheet" href="@($"{NavigationManager.BaseUri}assets/libs/node-waves/waves.min.css")">

        <!-- Tom Select CSS -->
        <link rel="stylesheet" href="@($"{NavigationManager.BaseUri}assets/libs/tom-select/css/tom-select.bootstrap5.min.css")">

        <!-- ColorPicker CSS -->
        <link href="_content/BlazorColorPicker/colorpicker.css" rel="stylesheet" />
        <link href="_content/BlazorColorPicker/BlazorColorPicker.bundle.scp.css" rel="stylesheet" />

        <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />

	</head>

    <body> 

        @RenderBody()

        <!-- SCRIPTS -->

        <!-- BOOTSTRAP JS -->
        <script src="@($"{NavigationManager.BaseUri}assets/libs/bootstrap/js/bootstrap.bundle.min.js")"></script>

        <!-- node-waves JS -->
        <script src="@($"{NavigationManager.BaseUri}assets/libs/node-waves/waves.min.js")"></script>

        <!-- TomSelect JS -->
        <script src="@($"{NavigationManager.BaseUri}assets/libs/tom-select/js/tom-select.complete.min.js")"></script>

        <!-- END SCRIPTS -->

        <script src="_framework/blazor.server.js"></script>
        <script src="js/javaScriptInterop.js"></script>
        <script src="js/resizeInterop.js"></script>
        <script src="js/scrollHandler.js"></script>

	</body>
</html>

